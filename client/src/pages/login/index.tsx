/* eslint-disable react-hooks/rules-of-hooks */
import axios from "axios";
import Navbar from "components/Navbar/Navbar";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { useForm } from "react-hook-form";
import styles from "../../styles/login.module.scss";

type LoginInputs = {
  emailOrUsername: string;
  password: string;
};

const index = () => {
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const {
    register,
    handleSubmit,
    formState: { errors },
    watch,
    reset,
    trigger,
  } = useForm<LoginInputs>();

  const onSubmit = async (data: LoginInputs) => {
    setLoading(true);

    try {
      dispatch;
      const res = await axios.post(
        "http://localhost:4000/api/auth/login",
        data
      );

      console.log(res.data?.message);
      console.log(res.data);
      setError(null);
    } catch (error) {
      console.log(error.response.data?.error);
      setError(error.response.data?.error);
    }

    setLoading(false);
  };

  if (loading) {
    return (
      <>
        <Navbar />
        <span className={styles.loader}></span>
      </>
    );
  }
  return (
    <div className={styles.login_page}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by sociatek" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <div className={styles.login_page_main}>
        <div className={styles.login_page_form}>
          <h3>Login Here</h3>
          <form onSubmit={handleSubmit(onSubmit)}>
            <input
              {...register("emailOrUsername", {
                required: "Email is required!",
              })}
              placeholder="Email Or Username"
              onBlur={() => {
                trigger("emailOrUsername");
              }}
              className={styles.exact_form_inp}
            />
            {/* error message */}
            <span className={styles.form_err}>
              {errors.emailOrUsername?.message}
            </span>

            <input
              type="password"
              {...register("password", {
                required: "Password is required!",
              })}
              placeholder="Password"
              onBlur={() => {
                trigger("password");
              }}
              className={styles.exact_form_inp}
            />
            <span className={styles.form_err}>{errors.password?.message}</span>

            {error && <span className={styles.form_errr}>{error}</span>}
            <input
              type="submit"
              value={loading ? "Loading..." : "Log In"}
              className={styles.submit_btn}
              style={{ cursor: loading ? "not-allowed" : "pointer" }}
            />
          </form>

          <p style={{ marginTop: "15px" }}>
            <Link href="/registration" style={{ color: "black" }}>
              {" "}
              Don&apos;t have an account? Register here..
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
};

export default index;
