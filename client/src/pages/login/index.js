/* eslint-disable react-hooks/rules-of-hooks */
import Navbar from "components/Navbar/Navbar";
import Head from 'next/head';
import React, { useState } from 'react';
import { useForm } from "react-hook-form";

type LoginInputs = {
    emailOrUsername: string;
    password: string;
};

const index = () => {
    const [loading, setLoading] = useState(false);
    const {
        register,
        handleSubmit,
        formState: { errors },
        watch,
        reset,
        trigger,
      } = useForm<LoginInputs>();

  if (loading) {
    return (
      <>
        <Navbar />
        <span className={styles.loader}></span>
      </>
    );
  }
  return (
    <div className={styles.registration_page}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.registration_page_main}>
        <div className={styles.registration_page_form}>
        <form onSubmit={handleSubmit(onSubmit)}>
        <input
                {...register("emailOrUsername", {
                  required: "Email is required!",
                })}
                placeholder="Email Or Username"
                onBlur={() => {
                  trigger("emailOrUsername");
                }}
                className={styles.exact_form_inp}
              />
              {/* error message */}
              <span className={styles.form_err}>{errors.emailOrUsername?.message}</span>

              <input
                type="password"
                {...register("password", {
                  required:
                    "Password is required!",
                 
                })}
                placeholder="Password"
                onBlur={() => {
                  trigger("password");
                }}
                className={styles.exact_form_inp}
              />
              <span className={styles.form_err}>
                {errors.password?.message}
              </span>
        </form>
        </div>
        </div>
        </div>
  )
}

export default index